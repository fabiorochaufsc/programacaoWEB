
\documentclass[14pt]{beamer}
\usepackage{listings}


\input{/home/frr/SYNC/Dropbox/Modelos/Modelo_apresentacao_beamer/conf_slides}

\title[]{\huge Tópicos Especiais I - Desenvolvimento aplicações móveis}
\subtitle{NodeJs}


\institute[Apresentação]{}
\author[]{\includegraphics[width=1.8cm]{/home/frr/SYNC/Dropbox/Modelos/Modelo_apresentacao_beamer/logo}\\Prof. Dr. Fábio Rodrigues de la Rocha}
\date[]{}
%\pgfdeclareimage[width=1.2cm]{logo}{imagens/logo}


\begin{document}


\frame{\titlepage}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

\begin{frame}\frametitle{NodeJS}
\begin{itemize}
\item Criado em 2009 por Ryan Dahl{\tiny{\url{https://www.youtube.com/watch?v=SAc0vQCC6UQ}}}
\pause
\item Basicamente É Javascript rodando no servidor
\pause
\item Utiliza o motor do google chrome para interpretar js (motor opensource v8)
\pause
\item Tem várias bibliotecas escritas em C++/Js para realizar tarefas
\pause 
\item I/O, envio de pacotes pela rede, implementação de protocolos


\end{itemize}
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

\begin{frame}\frametitle{NodeJS}
\begin{itemize}
\item Em mais detalhes é um framework para aplicações altamente concorrentes e escaláveis
\pause
\item Arquitetura orientada a eventos
\pause
\item Modelo não bloqueante de I/O - Event Loop(callbacks)
\pause
\item É single thread (em termos)

\pause
\item É javascript mas sem o DOM

\end{itemize}
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

\begin{frame}\frametitle{NodeJS}
\begin{block}{Para que Node é utilizado ?}
\begin{itemize}
 \item Criar um servidor para receber requisições HTTP (em 10 linhas de código)
 \item Criar um servidor de TCP, DNS, servidor WEB
 \item Criar um servidor como o Gtalk para lidar com vários clientes simultâneos
 \item Criar todo o tipo de sistema online com vários usuários simultâneos (jogos online, aplicações de bate-papo, rastreamento, etc)
\end{itemize}




\end{block}]
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Servidor HTTP}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
const http = require ('http')
const server = http.createServer(function (requisicao, resposta) {
  console.log('Recebendo uma request!')
  resposta.end('<h1>Aqui fica o que vamos enviar para o navegador como resposta!</h1>')
})
 
server.listen(3000, function () {
  console.log(`Servidor rodando em http://localhost:3000`)
  console.log('Para derrubar o servidor: ctrl + c');
});


\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Node}
\begin{itemize}
 \item módulos, require, npm
 \item É JS no servidor, no cliente e hoje também nos smartfones
 \item É interpretada, facilita o ciclo de desenvolvimento. (in a way..)
 \item Diversos tutoriais, livros, podcasts, grupos de estudo, etc.
\end{itemize}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Node}
\begin{block}{Onde usar Node ?}
 Aplicações concorrentes com muito I/O
\end{block}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Node}
\begin{block}{Onde NÃO usar Node ?}
 Aplicações que usam muita CPU
\end{block}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Exemplo:sincrono}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
  console.log('1');
  t();
  console.log('3');
  function t() {
    console.log('2');
  }
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{assincrono}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
  console.log('1');
  t();
  console.log('3');
  function t() {
    setTimeout(function() {
      console.log('2');
      },100);
  }
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Javascript básico}
\begin{itemize}
 \item criada em 1995, parecida com C, subestimada, a maioria das pessoas não entende...
 \item tipos de dados (boolean, number, string, null, undefined)
 \item funções são entidades de primeira classe
 \item arrow functions
\end{itemize}


\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{assincrono}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var vetor = [10,20,30,40,50];

vetor.map(s=>console.log(s+1)
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Objetos}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
   function droid() {
    this.nome='tste';
    this.end='sss';
   }
    droid.prototype.func = function ()
    {
        console.log('estou aqui');
    }
   var x =  new droid()

   console.log(x.nome)
   x.func()
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Objetos}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
function Droid() {}
var teste = new Droid();
Droid.prototype.retorna   = function() {return this.lingua;};
Droid.prototype.configura = function(x) {this.lingua = x;};

teste.configura('portugues');
console.log('Resultado:'+ teste.retorna());
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Objetos}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
function Droid() {}
var teste = new Droid();
Droid.prototype.retorna   = function() {return this.lingua;};
Droid.prototype.configura = function(x) {this.lingua = x;};

teste.configura('portugues');
console.log('Resultado teste :'+ teste.retorna());

var teste2 = new Droid();
teste2.configura('ingles');
console.log('Resultado teste2:'+ teste2.retorna());
console.log('Resultado teste :'+ teste.retorna());
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Controle de fluxo - if/else}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var x=10;

if (x> 10) {
  console.log('x eh maior do que 10');
}
else console.log('x em menor ou igual a 10');
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Controle de fluxo - switch/case}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var x=10;

switch (x)
{
  case 0:
	console.log('é 0');
	break;
  case 10:
	console.log('é 10');
	break;
  default:
	console.log('nem 0, nem 10');
}
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Repetição - for}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var x = [1,2,3,4,5]
for (var i=0; i< x.length;x++)
  console.log(x[i])
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Repetição - while}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var x = [1,2,3,4,5]
var i=0;
while (i<x.length) {
  console.log(x[i])
  i++;
}
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Repetição - for/in}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var x = [1,2,3,4,5]
for (y in x)
{
  console.log(y)
}
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{map}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var x = [1,2,3,4,5]

x.map (function(x){
  console.log(x)
});
\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{array}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var x =[];
var y = [1,3,4,6,7];

x.push(123);
x.push(332);
console.log('tamanho='+x.length)

var k = [];
k.push({nome:'Fabio Rocha', ocupacao:'professor'});
k.push({nome:'Maria Luisa', ocupacao:'estudante'});

for (var z=0;z<k.length;z++)
{
  console.log('nome='+k[z].nome+'  ocupacao='+k[z].ocupacao)
}



\end{lstlisting}

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Operações}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
1+3+'2'
'42'


'42'== 42
true

'42'=== 42
false

\end{lstlisting}

\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{Strings}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
var A = 'oi';
var B = 'mundo';
var C = A+B;

var D = 'vamos testar ${A} ${B}';
var E = `vamos testar ${A} ${B}`;

console.log(D);
console.log(E);


\end{lstlisting}

\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{linha de comando}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
node hello2.js status port 42

// dentro do hello2.js
process.argv.forEach(function (arg) {
  console.log(arg);
});


\end{lstlisting}

\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]
 \frametitle{linha de comando}
\begin{lstlisting}[basicstyle=\tiny\ttfamily]
#!/usr/bin/env node
/* 
Lembre-se de tornar executável o arquivo com 'chmod +x hello2.js'

*/


process.argv.forEach(function (arg) {
  console.log(arg);
});


\end{lstlisting}

\end{frame}
\end{document}